import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import statistics as st
import scipy.stats as stats
#from scipy.stats import chisqprob
from scipy.stats import chisquare
import pylab as pl

list = [4, 5, 1, 6, 6, 6, 6, 3, 2, 4, 3, 6, 3, 3, 4, 2, 6,
 6, 2, 6, 6, 4, 1, 6, 5, 2, 2, 6, 3, 5, 4, 4, 4, 3, 1, 5, 
 5, 2, 3, 1, 3, 5, 6, 6, 6, 6, 3, 3, 4, 4, 2, 5, 5, 1, 5, 
 3, 1, 5, 1, 5, 3, 4, 2, 3, 4, 4, 6, 4, 1, 5, 3, 2, 3, 4, 
 5, 1, 2, 6, 1, 6, 4, 3, 1, 1, 2, 1, 6, 1, 1, 5, 2, 6, 3, 
 4, 5, 6, 6, 6, 3, 2, 3, 4, 4, 1, 5, 4, 2, 6, 6, 3, 4, 3, 
 6, 4, 1, 4, 5, 2, 3, 6, 2, 4, 2, 3, 1, 4, 5, 2, 3, 5, 5, 
 6, 2, 5, 1, 5, 2, 1, 2, 5, 3, 4, 5, 2, 6, 4, 5, 6, 2, 1, 
 4, 2, 3, 4, 6, 6, 3, 3, 2, 3, 1, 1, 3, 4, 3, 5, 3, 6, 1, 
 3, 3, 2, 4, 6, 1, 4, 2, 2, 5, 5, 3, 5, 2, 5, 5, 4, 4, 5, 
 2, 3, 1, 4, 6, 1, 4, 2, 3, 6, 3, 5, 4, 1, 4, 3, 6, 2, 6, 
 3, 4, 1, 6, 3, 5, 4, 2, 5, 5, 4, 1, 6, 5, 5, 5, 3, 6, 6, 
 2, 6, 6, 6, 1, 6, 4, 6, 3, 1, 4, 3, 6, 5, 2, 1, 5, 4, 2, 
 5, 6, 3, 2, 3, 1, 3, 6, 2, 2, 5, 3, 6, 1, 6, 2, 3, 2, 6, 
 6, 2, 4, 6, 5, 4, 2, 6, 5, 4, 6, 4, 4, 3, 5, 2, 6, 3, 6, 
 5, 1, 2, 6, 3, 6, 4, 3, 4, 6, 2, 4, 6, 3, 2, 3, 5, 6, 5, 
 2, 2, 5, 6, 6, 5, 5, 2, 3, 1, 2, 4, 3, 5, 6, 1, 3, 2, 5, 
 6, 6, 5, 4, 5, 2, 3, 5, 2, 2, 5, 3, 4, 6, 5, 1, 2, 1, 3, 
 1, 6, 3, 1, 4, 5, 1, 2, 1, 4, 3, 3, 1, 6, 4, 5, 5, 6, 5, 
 6, 4, 4, 6, 3, 1, 6, 4, 2, 5, 6, 5, 5, 4, 2, 1, 1, 3, 3, 
 6, 1, 5, 5, 4, 2, 1, 2, 3, 4, 2, 1, 5, 1, 4, 1, 5, 4, 6, 
 1, 6, 3, 1, 2, 3, 6, 1, 2, 2, 1, 3, 1, 5, 6, 3, 5, 3, 1, 
 6, 6, 5, 3, 2, 5, 3, 2, 1, 5, 1, 4, 1, 2, 2, 4, 4, 6, 4, 
 5, 1, 2, 1, 1, 4, 4, 1, 2, 1, 3, 1, 4, 4, 3, 4, 5, 5, 3, 
 3, 4, 5, 6, 1, 4, 1, 4, 2, 1, 2, 5, 6, 5, 1, 2, 3, 3, 4, 
 6, 4, 2, 3, 4, 2, 6, 1, 4, 2, 6, 4, 2, 5, 4, 2, 4, 4, 1, 
 6, 6, 2, 6, 1, 1, 5, 4, 6, 5, 5, 2, 1, 3, 3, 3, 5, 5, 1, 
 4, 1, 4, 6, 4, 5, 1, 1, 2, 6, 4, 4, 5, 6, 2, 5, 6, 3, 5, 
 5, 2, 6, 2, 2, 5, 3, 6, 3, 6, 4, 1, 1, 5, 1, 3, 4, 5, 2, 
 6, 1, 2, 1, 6, 5, 3, 4, 6, 1, 6, 5, 1, 6, 2, 4, 2, 5, 1, 
 4, 6, 5, 2, 4, 4, 2, 5, 3, 6, 1, 2, 1, 4, 4, 1, 3, 6, 1, 
 3, 2, 1, 5, 2, 4, 2, 1, 6, 1, 2, 3, 4, 6, 3, 2, 6, 1, 1, 
 5, 2, 3, 4, 2, 5, 3, 6, 2, 4, 6, 4, 2, 6, 3, 6, 1, 5, 4, 
 2, 5, 1, 4, 3, 5, 6, 2, 5, 6, 3, 4, 1, 5, 3, 2, 3, 6, 5, 
 4, 1, 3, 1, 4, 2, 2, 2, 1, 5, 6, 1, 5, 2, 5, 1, 5, 1, 4, 
 2, 1, 3, 3, 4, 2, 5, 6, 4, 5, 4, 3, 6, 5, 5, 2, 3, 6, 5, 
 2, 2, 6, 1, 4, 1, 2, 3, 4, 2, 4, 2, 1, 4, 3, 3, 5, 5, 2, 
 6, 6, 3, 2, 5, 2, 5, 5, 3, 4, 6, 3, 4, 4, 2, 5, 4, 1, 4, 
 1, 2, 2, 5, 3, 4, 2, 6, 1, 4, 4, 3, 5, 1, 6, 5, 6, 3, 4, 
 6, 1, 4, 5, 2, 2, 4, 5, 1, 5, 3, 3, 3, 2, 3, 3, 6, 1, 1, 
 4, 2, 5, 3, 1, 1, 1, 4, 1, 2, 3, 2, 4, 4, 1, 1, 3, 6, 4, 
 6, 6, 1, 5, 3, 1, 6, 3, 1, 6, 5, 3, 5, 6, 1, 2, 2, 5, 2, 
 3, 4, 3, 3, 5, 1, 6, 4, 6, 1, 6, 1, 6, 2, 6, 3, 2, 6, 6, 
 3, 5, 3, 3, 2, 5, 1, 6, 6, 2, 1, 2, 3, 2, 2, 6, 1, 3, 2, 
 1, 2, 5, 6, 5, 5, 2, 4, 4, 2, 2, 5, 2, 1, 6, 2, 6, 3, 3, 
 4, 5, 5, 1, 5, 2, 6, 3, 1, 5, 2, 1, 4, 3, 3, 1, 4, 5, 3, 
 5, 1, 5, 6, 6, 1, 3, 4, 3, 5, 6, 1, 3, 6, 1, 4, 2, 1, 3, 
 5, 4, 5, 4, 5, 1, 3, 5, 5, 4, 3, 3, 3, 5, 3, 4, 6, 5, 5, 
 1, 5, 1, 5, 4, 3, 4, 3, 5, 5, 4, 1, 6, 5, 6, 4, 2, 3, 4, 
 5, 1, 2, 5, 4, 3, 3, 4, 1, 6, 5, 1, 2, 3, 4, 2, 3, 4, 6, 
 3, 4, 6, 2, 4, 5, 2, 6, 4, 2, 5, 2, 2, 3, 2, 3, 5, 4, 2, 
 1, 1, 4, 4, 2, 3, 6, 5, 3, 6, 2, 5, 2, 2, 1, 5, 2, 1, 6, 
 6, 5, 4, 1, 5, 1, 3, 3, 5, 6, 4, 6, 6, 5, 5, 6, 5, 3, 4, 
 6, 5, 1, 3, 3, 6, 1, 5, 2, 1, 1, 1, 6, 3, 2, 5, 4, 2, 2, 
 5, 5, 3, 4, 4, 6, 5, 1, 6, 2, 3, 5, 4, 1, 6, 6, 4, 2, 3, 
 2, 5, 5, 3, 2, 4, 4, 6, 6, 1, 6, 3, 1, 6, 5, 6, 4, 1, 5, 
 6, 6, 1, 2, 5, 2, 1, 6, 4, 5, 6, 4, 2, 2, 5, 2, 6, 3, 5, 
 4, 5, 1, 1, 4, 4, 1, 3, 4, 3, 6, 2, 6, 1, 2, 4, 4, 5, 2, 
 3, 4, 1, 5, 6, 4, 3, 2, 1, 1, 1, 4, 3, 2, 6, 3, 6, 1, 4, 
 4, 2, 3, 3, 3, 2, 4, 4, 6, 4, 3, 3, 5, 1, 3, 2, 3, 4, 5, 
 4, 4, 2, 3, 4, 6, 1, 2, 3, 1, 1, 5, 6, 4, 3, 5, 1, 4, 5, 
 3, 5, 3, 6, 3, 1, 2, 4, 3, 5, 1, 2, 5, 1, 3, 3, 5, 3, 4, 
 2, 1, 2, 5, 3, 4, 6, 4, 1, 3, 6, 4, 1, 4, 6, 4, 5, 3, 5, 
 3, 1, 1, 6, 4, 2, 2, 3, 1, 2, 6, 1, 4, 1, 5, 4, 1, 1, 4, 
 3, 2, 3, 5, 2, 6, 4, 3, 4, 6, 1, 4, 2, 2, 4, 3, 5, 6, 1, 
 2, 6, 3, 5, 6, 2, 1, 4, 6, 3, 5, 2, 3, 4, 2, 3, 1, 2, 1, 
 1, 6, 5, 3, 5, 2, 1, 2, 4, 5, 4, 3, 2, 1, 3, 6, 4, 6, 1, 
 3, 2, 1, 2, 4, 2, 5, 6, 2, 1, 3, 3, 2, 6, 4, 1, 4, 6, 2, 
 1, 5, 3, 6, 1, 6, 4, 5, 1, 3, 5, 6, 5, 6, 3, 4, 5, 3, 1, 
 2, 2, 3, 2, 6, 1, 5, 1, 1, 6, 6, 3, 4, 4, 1, 3, 2, 4, 1, 
 1, 5, 1, 5, 4, 1, 1, 6, 4, 6, 3, 6, 6, 5, 1, 2, 6, 1, 1, 
 1, 4, 2, 4, 4, 4, 3, 3, 5, 2, 5, 3, 1, 2, 2, 3, 5, 1, 6, 
 3, 4, 1, 1, 1, 4, 3, 4, 6, 4, 1, 6, 4, 5, 5, 6, 5, 4, 5, 
 2, 2, 3, 5, 4, 2, 6, 2, 1, 6, 3, 6, 6, 4, 6, 4, 5, 5, 1, 
 1, 6, 2, 1, 5, 1, 2, 5, 1, 6, 5, 5, 6, 2, 1, 4, 2, 3, 4, 
 2, 4, 3, 3, 6, 6, 1, 3, 4, 5, 2, 4, 3, 5, 6, 3, 2, 1, 1, 
 5, 2, 3, 2, 5, 3, 4, 4, 6, 1, 4, 1, 5, 6, 2, 2, 4, 4, 5, 
 1, 5, 4, 1, 6, 5, 3, 3, 4, 2, 6, 3, 3, 5, 1, 2, 4, 2, 1, 
 4, 6, 4]
values = [0,1,2,3,4,5,6]
total = [0,0,0,0,0,0]
#print(len(list))
i=0
while i <len(list):
    total[list[i]-1]+= 1
    i+=1

print (total)

expect = len(list)/6

esperado = [0,expect,expect,expect,expect,expect,expect]
total= [0,total[0],total[1],total[2],total[3],total[4],total[5]]

width =0.35

fig, ax = plt.subplots()
rects1 = ax.bar(np.arange(len(values)) - width/2,
 total, width, label='Obtido')
rects2 = ax.bar(np.arange(len(values)) + width/2,
 esperado, width, label='Esperado')

ax.set_ylabel('Número de resultados')
ax.set_title('Resultados esperados vs obtidos')
ax.set_xticks(np.arange(len(values)), ['1','2','3','4','5','6'])
ax.legend()

#ax.bar_label(rects1, padding=3)
#ax.bar_label(rects2, padding=3)

fig.tight_layout()
plt.xlim([0.5,6.5])
plt.show()


values = [1,2,3,4,5,6]
total = [0,0,0,0,0,0]
#print(len(list))
i=0
while i <len(list):
    total[list[i]-1]+= 1
    i+=1

#print (total)

expect = len(list)/6
#print(expect)
esperado = [expect,expect,expect,expect,expect,expect]

if len(list)//2 !=0:
    a=(len(list))/2
else:
    a=(len(list)-1)/2
i=0
#print(a)
normal =[]
while i<a-2:
    normal.append((list[i*2]+list[i*2+1]))
    #print(i)
    i+=1
#print(normal)
res = [0,0,0,0,0,0,0,0,0,0,0]
x=[2,3,4,5,6,7,8,9,10,11,12]    
i=0
while i <len(normal):
    res[normal[i]-2]+= 1
    i+=1
print(res)  




normal.sort()

mean=(st.mean(normal))
sd=(st.stdev(normal))
print(mean)
print(sd)

pdf = stats.norm.pdf(normal, mean, sd)

plt.plot(normal, pdf)
plt.show()


#chi-quadrado

#graus de liberdade
gl= len(values)-1
C=len(values)   
expect = 1/len(values)*len(list)

i = 0
chi =0
while i <len(values):
    obs= total[i]
    x = ((obs-expect)**2)/expect
    print(i,x)
    chi+=x
    i+=1

print('Valo de Chi-Quadrado',chi)    

stats.chisqprob = lambda chisq, df: stats.chi2.sf(chisq, df)

print('Graus de Liberdade',gl)

print('Intervalo de Confiança',stats.chisqprob(chi,gl))